package com.christianperez.LibaryManagment.controllers;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.christianperez.LibaryManagment.models.Book;
import com.christianperez.LibaryManagment.service.BookService;

@Controller
public class BookController {
	private final BookService bookService;

	@Autowired
	public BookController(BookService bookService) {
		this.bookService = bookService;
	}

	@RequestMapping("/home")
	public String findAllBooks(Model model) {
		final List<Book> books = bookService.findAllBooks();

		model.addAttribute("books", books);
		return "home.jsp";
	}

	@RequestMapping("/book-search")
	public String searchBook(@Param("keyword") String keyword, Model model) {
		final List<Book> books = bookService.searchBooks(keyword);

		model.addAttribute("books", books);
		model.addAttribute("keyword", keyword);
		return "home.jsp";
	}

	@RequestMapping("/add-book")
	public String addform() {
		return "addForm.jsp";
	}

	@RequestMapping(value = "/addResults", method = RequestMethod.POST)
	public String fromResults(@RequestParam(value = "bookName") String bookName,
			@RequestParam(value = "author") String author, @RequestParam(value = "price") Double price,
			@RequestParam(value = "quantity") Double quantity, HttpSession session) {
		session.setAttribute("bookName", bookName);
		session.setAttribute("author", author);
		session.setAttribute("price", price);
		session.setAttribute("quantity", quantity);
		return "redirect:/home";
	}
	
	
	@RequestMapping("/remove-book/{id}")
	public String deleteBook(@PathVariable("id") Long id, Model model) {
		bookService.deleteBook(id);

		model.addAttribute("book", bookService.findAllBooks());
		return "redirect:/books";
	}

}
